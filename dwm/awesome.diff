2c2
< index 061ad66..82a3ed2 100644
---
> index 061ad66..05f18e5 100644
5c5
< @@ -16,6 +16,8 @@ static const char *colors[][3]      = {
---
> @@ -16,6 +16,7 @@ static const char *colors[][3]      = {
9d8
< +	[SchemeHov]  = { col_gray4, col_cyan,  col_cyan  },
14c13
< @@ -64,8 +66,10 @@ static const Key keys[] = {
---
> @@ -64,8 +65,10 @@ static const Key keys[] = {
27c26
< @@ -84,6 +88,9 @@ static const Key keys[] = {
---
> @@ -84,6 +87,9 @@ static const Key keys[] = {
37c36
< @@ -102,6 +109,7 @@ static const Button buttons[] = {
---
> @@ -102,6 +108,7 @@ static const Button buttons[] = {
46c45
< index e5efb6a..8cb5171 100644
---
> index e5efb6a..0d18e1b 100644
62c61
< +enum { SchemeNorm, SchemeSel, SchemeHov, SchemeHid }; /* color schemes */
---
> +enum { SchemeNorm, SchemeSel, SchemeHid }; /* color schemes */
75c74
< @@ -124,8 +127,10 @@ struct Monitor {
---
> @@ -124,6 +127,7 @@ struct Monitor {
82d80
< +	Client *hov;
84,86c82
<  	Monitor *next;
<  	Window barwin;
< @@ -168,13 +173,17 @@ static void expose(XEvent *e);
---
> @@ -168,13 +172,17 @@ static void expose(XEvent *e);
105c101
< @@ -204,6 +213,9 @@ static void setlayout(const Arg *arg);
---
> @@ -204,6 +212,9 @@ static void setlayout(const Arg *arg);
115c111
< @@ -214,6 +226,7 @@ static void togglebar(const Arg *arg);
---
> @@ -214,6 +225,7 @@ static void togglebar(const Arg *arg);
123c119
< @@ -442,10 +455,25 @@ buttonpress(XEvent *e)
---
> @@ -442,10 +454,25 @@ buttonpress(XEvent *e)
152c148
< @@ -455,7 +483,7 @@ buttonpress(XEvent *e)
---
> @@ -455,7 +482,7 @@ buttonpress(XEvent *e)
161c157
< @@ -699,7 +727,7 @@ dirtomon(int dir)
---
> @@ -699,7 +726,7 @@ dirtomon(int dir)
170c166
< @@ -716,6 +744,8 @@ drawbar(Monitor *m)
---
> @@ -716,6 +743,8 @@ drawbar(Monitor *m)
179c175
< @@ -736,16 +766,38 @@ drawbar(Monitor *m)
---
> @@ -736,16 +765,36 @@ drawbar(Monitor *m)
194,196c190
< +				if (m->hov == c)
< +					scm = SchemeHov;
< +				else if (m->sel == c)
---
> +				if (m->sel == c)
223c217
< @@ -791,9 +843,17 @@ void
---
> @@ -791,9 +840,17 @@ void
243c237
< @@ -837,28 +897,52 @@ focusmon(const Arg *arg)
---
> @@ -837,28 +894,52 @@ focusmon(const Arg *arg)
265,266d258
< +		return;
< +	if (!selmon->clients)
269a262,263
> +	if (!selmon->clients)
> +		return;
306c300
< @@ -968,6 +1052,36 @@ grabkeys(void)
---
> @@ -968,6 +1049,36 @@ grabkeys(void)
343c337
< @@ -1070,12 +1184,14 @@ manage(Window w, XWindowAttributes *wa)
---
> @@ -1070,12 +1181,14 @@ manage(Window w, XWindowAttributes *wa)
360,443c354
< @@ -1119,18 +1235,76 @@ monocle(Monitor *m)
<  void
<  motionnotify(XEvent *e)
<  {
< +	int x, i;
<  	static Monitor *mon = NULL;
< +	Client *c;
<  	Monitor *m;
<  	XMotionEvent *ev = &e->xmotion;
<  
< -	if (ev->window != root)
< +	if (ev->window != selmon->barwin) {
< +		if (selmon->hov) {
< +			if (selmon->hov != selmon->sel)
< +				XSetWindowBorder(dpy, selmon->hov->win, scheme[SchemeNorm][ColBorder].pixel);
< +			else
< +				XSetWindowBorder(dpy, selmon->hov->win, scheme[SchemeSel][ColBorder].pixel);
< +			
< +			selmon->hov = NULL;
< +			c = wintoclient(ev->window);
< +			m = c ? c->mon : wintomon(ev->window);
< +			drawbar(m);
< +		}
< +
< +		if (ev->window == root) {
< +			if ((m = recttomon(ev->x_root, ev->y_root, 1, 1)) != mon && mon) {
< +				unfocus(selmon->sel, 1);
< +				selmon = m;
< +				focus(NULL);
< +			}
< +			mon = m;
< +		}
< +	
<  		return;
< -	if ((m = recttomon(ev->x_root, ev->y_root, 1, 1)) != mon && mon) {
< -		unfocus(selmon->sel, 1);
< -		selmon = m;
< -		focus(NULL);
<  	}
< -	mon = m;
< +
< +	c = wintoclient(ev->window);
< +	m = c ? c->mon : wintomon(ev->window);
< +	c = m->clients;
< +
< +	x = 0, i = 0;
< +	do
< +		x += TEXTW(tags[i]);
< +	while (ev->x >= x && ++i < LENGTH(tags));
< +	if (i < LENGTH(tags) || ev->x < x + TEXTW(selmon->ltsymbol) || ev->x > selmon->ww - TEXTW(stext) + lrpad - 2) {
< +		if (selmon->hov) {
< +			if (selmon->hov != selmon->sel)
< +				XSetWindowBorder(dpy, selmon->hov->win, scheme[SchemeNorm][ColBorder].pixel);
< +			else
< +				XSetWindowBorder(dpy, selmon->hov->win, scheme[SchemeSel][ColBorder].pixel);
< +			selmon->hov = NULL;
< +			drawbar(m);
< +		}
< +	} else {
< +		x += TEXTW(selmon->ltsymbol);
< +		if (c) {
< +			do {
< +				if (!ISVISIBLE(c))
< +					continue;
< +				else
< +					x +=(1.0 / (double)m->bt) * m->btw;
< +			} while (ev->x > x && (c = c->next));
< +			if (c) {
< +				if (selmon->hov) {
< +					if (selmon->hov != selmon->sel)
< +						XSetWindowBorder(dpy, selmon->hov->win, scheme[SchemeNorm][ColBorder].pixel);
< +					else
< +						XSetWindowBorder(dpy, selmon->hov->win, scheme[SchemeSel][ColBorder].pixel);
< +				}
< +				selmon->hov = c;
< +				XSetWindowBorder(dpy, c->win, scheme[SchemeHov][ColBorder].pixel);
< +			}
< +		}
< +		drawbar(m);
< +	}
<  }
<  
<  void
< @@ -1196,7 +1370,7 @@ movemouse(const Arg *arg)
---
> @@ -1196,7 +1309,7 @@ movemouse(const Arg *arg)
452c363
< @@ -1249,6 +1423,16 @@ propertynotify(XEvent *e)
---
> @@ -1249,6 +1362,16 @@ propertynotify(XEvent *e)
469c380
< @@ -1610,6 +1794,42 @@ seturgent(Client *c, int urg)
---
> @@ -1610,6 +1733,42 @@ seturgent(Client *c, int urg)
512c423
< @@ -1744,6 +1964,23 @@ toggleview(const Arg *arg)
---
> @@ -1744,6 +1903,23 @@ toggleview(const Arg *arg)
536,543d446
< @@ -1815,6 +2052,7 @@ updatebars(void)
<  				CWOverrideRedirect|CWBackPixmap|CWEventMask, &wa);
<  		XDefineCursor(dpy, m->barwin, cursor[CurNormal]->cursor);
<  		XMapRaised(dpy, m->barwin);
< +		XSelectInput(dpy, m->barwin, ButtonPressMask|PointerMotionMask);
<  		XSetClassHint(dpy, m->barwin, &ch);
<  	}
<  }
